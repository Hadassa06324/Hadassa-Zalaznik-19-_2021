{"version":3,"sources":["redux/reducers/locationReducer.js","redux/stor.js","components/card.jsx","api/Api.jsx","components/convert.jsx","components/weatherFor5Days.jsx","components/input.jsx","components/location.jsx","redux/actions/locationAction.js","components/weather.jsx","components/currentWeather.jsx","components/favorites.jsx","components/navbar.jsx","App.jsx","reportWebVitals.ts","index.tsx"],"names":["reducer","produce","state","action","type","selectedLocation","payload","favoriteLocation","length","find","Key","IsFavorite","push","splice","Version","LocalizedName","Country","combineReducers","locationReducer","store","createStore","window","MyCard","props","style","width","marginBottom","className","lineHeight","children","getLocation","locationName","LocationUrl","axios","get","then","response","data","catch","err","alert","fToC","fahrenheit","fToCel","Math","round","WeatherFor5Days","locationKey","useState","weatherList","setWeatherList","useEffect","Url","getWeatherForFiveDays","DailyForecasts","map","item","index","display","getIconToWeather","Night","Icon","Day","Temperature","Minimum","Value","Maximum","HasPrecipitation","moment","Date","format","Input","setSelector","toast","useRef","locations","setLocations","setselectedLocation","filteredLocations","setFilteredLocations","ref","onKeyPress","e","chars","target","value","split","char","pop","test","join","current","show","severity","summary","detail","life","preventDefault","alphacheck","suggestions","completeMethod","event","setTimeout","field","onChange","htmlFor","IconButton","color","aria-label","onClick","connect","dispatch","selector","location","setSelectedLocation","Container","Row","Col","Button","addFavoriteLocation","iconNumber","src","localizedName","CurrentWeather","currentWeather","setCurrentWeather","getCurrentWeather","WeatherIcon","WeatherText","LocalObservationDateTime","Metric","history","useHistory","toWeather","sx","mr","remove","useStyles","makeStyles","root","withRouter","classes","React","setValue","BottomNavigation","newValue","showLabels","BottomNavigationAction","label","icon","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1e64785.chunk.js","sourcesContent":["import produce from \"immer\";\r\n\r\n\r\nconst initialState = {\r\n    selectedLocation: {\r\n        Version: 1,\r\n        Key: \"215854\",\r\n        LocalizedName: \"Tel Aviv\",\r\n        Country: \"Israel\",\r\n        IsFavorite: false\r\n    },\r\n    favoriteLocation: [\r\n    ]\r\n}\r\n\r\nconst reducer = produce((state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_SELECTED_LOCATION':\r\n            state.selectedLocation = action.payload\r\n            if (state.favoriteLocation.length > 0) {\r\n                const result = state.favoriteLocation.find(({ Key }) => Key === action.payload.Key)\r\n                if (result)\r\n                    state.selectedLocation.IsFavorite = true\r\n            }\r\n            break;\r\n        case 'ADD_FAVORITE_LOCATION':\r\n            state.selectedLocation.IsFavorite = true\r\n            state.favoriteLocation.push(action.payload)\r\n            break;\r\n        case 'VIEW_FAVORITE':\r\n            state.selectedLocation = action.payload\r\n            break;\r\n        case 'DELETE_FAVORITE_LOCATION':\r\n            state.favoriteLocation.splice(action.payload, 1)\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}, initialState)\r\n\r\nexport default reducer","import { combineReducers, createStore, applyMiddleware } from 'redux'\r\nimport locationReducer from './reducers/locationReducer'\r\n\r\n\r\nconst reducer = combineReducers({ locationReducer })\r\nconst store = createStore(reducer)\r\nwindow.store = store\r\nexport default store;","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport '../index.css';\r\nimport { Card } from 'primereact/card';\r\n\r\n\r\nexport const MyCard = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Card style={{ width: '15rem', marginBottom: '2em' }} >\r\n                <div className=\"p-m-0\" style={{ lineHeight: '1.5' }}>{props.children}</div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\nconst API_KEY = 'WajUtpkD3TkDGsZIsWAdsaq8D6b7Ru2s'//NqreXIG0KHDy6Js2jBW8DAAimUlA2Hfz//\t23ILefPmaTsLCEHmfJ8pUGR9k0lHHDhO// UeBeczneP0NFawavzOMKplb9Ltyyf9AO\r\nconst API_HOST_AND_VERSION = 'http://dataservice.accuweather.com/v1/'\r\n\r\n\r\n\r\nexport default function getLocation(locationName) {\r\n  const LocationUrl = `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=TgJbkMm6YYYGY6dM4J7lAamAcuBwndIC&q=${locationName}&language=en-us`\r\n\r\n  return axios.get(LocationUrl).then((response) => {\r\n    return response.data\r\n  })\r\n    .catch((err) => { alert(err) })\r\n}\r\n\r\nexport function getWeatherForFiveDays(locationKey) {\r\n  debugger\r\n  const Url = `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=TgJbkMm6YYYGY6dM4J7lAamAcuBwndIC&language=en-us&details=false&metric=false`\r\n\r\n  return axios.get(Url).then((response) => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nexport function getCurrentWeather(locationKey) {\r\n\r\n  const Url = `http://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=TgJbkMm6YYYGY6dM4J7lAamAcuBwndIC&language=en-us&details=false`\r\n\r\n  return axios.get(Url).then((response) => {\r\n    return response.data\r\n  })\r\n}\r\n\r\n\r\n// export  function getGeoLocation(locationName) {\r\n//   debugger\r\n//   const LocationUrl = \"https://developer.mozilla.org/en-US/docs/Web/API/URL_API\"\r\n\r\n//   return axios.get(LocationUrl,{headers: {\"Access-Control-Allow-Origin\": \"*\"}\r\n//   }).then((response) => {\r\n//       return response\r\n//     })\r\n//     .catch((err)=>{alert(err)})\r\n// }\r\n","import Math from 'math'\r\n\r\nexport function cToF(celsius) {\r\n  var cTemp = celsius;\r\n  var cToFahr = cTemp * 9 / 5 + 32;\r\n  return Math.Round(cToFahr)\r\n}\r\n\r\nexport function fToC(fahrenheit) {\r\n  var fTemp = fahrenheit;\r\n  var fToCel = (fTemp - 32) * 5 / 9;\r\n  return Math.round(fToCel)\r\n}","import { useEffect, useState } from \"react\";\r\nimport { getWeatherForFiveDays } from \"../api/Api\";\r\nimport { MyCard } from \"./card\";\r\nimport moment from \"moment\";\r\nimport { fToC } from './convert'\r\nimport { getIconToWeather } from \"./weather\";\r\n\r\nexport default function WeatherFor5Days(props) {\r\n\r\n  const { locationKey } = props\r\n  const [weatherList, setWeatherList] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n    getWeatherForFiveDays(locationKey).then((response) => {\r\n      setWeatherList(response.DailyForecasts)\r\n    })\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      {weatherList.map((item, index) => {\r\n        return <div key={index} style={{ display: 'inline-block' }}>\r\n          <MyCard >\r\n            {getIconToWeather(item.Night.Icon)}\r\n            {getIconToWeather(item.Day.Icon)}<br />\r\n            <label>{`${fToC(item.Temperature.Minimum.Value)}\\xB0C`} - {`${fToC(item.Temperature.Maximum.Value)}\\xB0C`}</label>\r\n            <label>{item.Day.HasPrecipitation && 'Has Precipitation'}</label><br />\r\n            <label>{moment(item.Date).format('dddd')}</label><br />\r\n          </MyCard></div>\r\n      })}\r\n    </>\r\n  );\r\n}","import { AutoComplete } from 'primereact/autocomplete';\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport { Toast } from 'primereact/toast';\r\nimport getLocation from '../api/Api';\r\nimport { IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nexport const Input = (props) => {\r\n    const { setSelector } = props\r\n    const toast = useRef(null);\r\n\r\n    const [locations, setLocations] = useState([]);\r\n    const [selectedLocation, setselectedLocation] = useState(null);\r\n    const [filteredLocations, setFilteredLocations] = useState(null);\r\n\r\n    const searchLocation = (event) => {\r\n        setTimeout(() => {\r\n            setFilteredLocations(locations);\r\n        }, 250);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLocation(selectedLocation).then((data) => {\r\n            setLocations(data)\r\n        })\r\n    }, [selectedLocation]);\r\n\r\n    function alphacheck(e) {\r\n        const regex = /[A-Za-z]/;\r\n        const chars = e.target.value.split('');\r\n        const char = chars.pop();\r\n        if (!regex.test(char) && char != \" \") {\r\n            e.target.value = chars.join('');\r\n            toast.current.show({ severity: 'error', summary: 'Error Message', detail: 'Please enter only English', life: 3000 });\r\n            e.preventDefault();\r\n            return false;\r\n\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Toast ref={toast} />\r\n            <div className=\"p-field p-col-12 p-md-4\">\r\n                <span className=\"p-float-label p-input-icon-left\">\r\n                    <i className=\"pi pi-search\" />\r\n                    <AutoComplete onKeyPress={(e) => { alphacheck(e) }}\r\n                        value={selectedLocation} suggestions={filteredLocations}\r\n                        completeMethod={searchLocation} field=\"LocalizedName\"\r\n                        onChange={(e) => setselectedLocation(e.value)} />\r\n                    <label htmlFor=\"lefticon\">City name</label>\r\n                </span>\r\n                <IconButton color=\"primary\" aria-label=\"add to shopping cart\" \r\n                        onClick={(e) => { setSelector(selectedLocation.LocalizedName) }}>\r\n                    <SearchIcon  />\r\n                </IconButton>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { useRef } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Input } from \"./input\";\r\nimport { connect } from \"react-redux\"\r\nimport { setSelectedLocation, addFavoriteLocation } from \"../redux/actions/locationAction\";\r\nimport getLocation from \"../api/Api\";\r\nimport { Toast } from 'primereact/toast';\r\nimport '../index.css';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    locations: state.locationReducer\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function Location(props) {\r\n\r\n  const { dispatch, locations } = props\r\n\r\n  const [selector, setSelector] = useState(locations.selectedLocation.LocalizedName);\r\n  const toast = useRef(null)\r\n\r\n  let location = {\r\n    Version: 1,\r\n    Key: \"215854\",\r\n    LocalizedName: \"Tel Aviv\",\r\n    Country: \"Israel\"\r\n  }\r\n\r\n  function addLocationToFavorites() {\r\n    dispatch(addFavoriteLocation(locations.selectedLocation))\r\n    toast.current.show({ severity: 'success', summary: 'Success Message', detail: 'Saved to Favorites', life: 3000 });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getLocation(selector).then((response) => {\r\n      if (selector) {\r\n        location.Version = response[0].Version\r\n        location.Key = response[0].Key\r\n        location.LocalizedName = response[0].LocalizedName\r\n        location.Country = response[0].Country.LocalizedName\r\n        location.IsFavorite = false\r\n        dispatch(setSelectedLocation(location))\r\n      }\r\n    })\r\n      .catch(() => {\r\n        toast.current.show({ severity: 'warn', summary: 'Warn Message', detail: 'Location Not Found', life: 3000 });\r\n      })\r\n  }, [selector]);\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Toast ref={toast} />\r\n      <Row>\r\n        <Col>\r\n          <Input setSelector={setSelector}></Input>\r\n        </Col>\r\n        <Col>\r\n          {locations.selectedLocation.IsFavorite ? <><label>the location is favorite </label><StarsIcon></StarsIcon></> :\r\n            <Button onClick={addLocationToFavorites} color=\"primary\">Save to Favorites</Button>}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n})","export const setSelectedLocation = (location) => {\r\n    return { type: 'SET_SELECTED_LOCATION', payload: location }\r\n}\r\n\r\nexport const addFavoriteLocation = (location) => {\r\n    return { type: 'ADD_FAVORITE_LOCATION', payload: location }\r\n}\r\n\r\nexport const deleteFavoriteLocation = (location) => {\r\n    return { type: 'DELETE_FAVORITE_LOCATION', payload: location }\r\n}\r\n\r\nexport const viewfavorite = (location) => {\r\n    return { type: 'VIEW_FAVORITE', payload: location }\r\n}\r\n\r\n","import WeatherFor5Days from \"./weatherFor5Days\"\r\nimport Location from \"./location\";\r\nimport { CurrentWeather } from \"./currentWeather\";\r\nimport { MyCard } from \"./card\";\r\nimport { connect } from \"react-redux\"\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\n//מספר צריך להשלח עם שתי ספרות ולכן אם הוא קטן מ - 10 יש להוסיף 0 לפניו\r\nexport function getIconToWeather(iconNumber) {\r\n  if (iconNumber < 10)\r\n    iconNumber = `0${iconNumber}`\r\n  return (\r\n    <img src={`https://developer.accuweather.com/sites/default/files/${iconNumber}-s.png`} />\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    locations: state.locationReducer\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function Weather(props) {\r\n\r\n  const { locations } = props\r\n  const location = locations.selectedLocation\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Location></Location>\r\n          </Col>\r\n          <Col>\r\n            <CurrentWeather locationKey={location.Key} localizedName={location.LocalizedName} ></CurrentWeather>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <WeatherFor5Days locationKey={location.Key}></WeatherFor5Days>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  )\r\n})","import { getCurrentWeather } from \"../api/Api\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getIconToWeather } from './weather'\r\nimport moment from \"moment\";\r\n\r\nexport const CurrentWeather = (props) => {\r\n\r\n    const { locationKey, localizedName } = props\r\n    const [currentWeather, setCurrentWeather] = useState()\r\n\r\n    useEffect(() => {\r\n        getCurrentWeather(locationKey).then((response) => {\r\n            setCurrentWeather(response[0])\r\n        })\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {currentWeather && <>\r\n                <h1>{localizedName}</h1>\r\n                {getIconToWeather(currentWeather.WeatherIcon)}\r\n                <br /><label> {currentWeather.WeatherText} </label><br></br>\r\n                <label> {moment(currentWeather.LocalObservationDateTime).format('LLLL')} </label>\r\n                <br></br>\r\n                <h1> {`${currentWeather.Temperature.Metric.Value}\\xB0C`} </h1>\r\n                <br></br><br/>\r\n            </>}\r\n        </>\r\n    )\r\n}","import { MyCard } from './card'\r\nimport { connect } from \"react-redux\"\r\nimport { deleteFavoriteLocation, viewfavorite } from \"../redux/actions/locationAction\";\r\nimport { CurrentWeather } from './currentWeather';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport '../index.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Toast } from 'primereact/toast';\r\nimport { useRef } from 'react';\r\nimport NavigationIcon from '@material-ui/icons/Navigation'\r\nimport { Container } from \"react-bootstrap\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  debugger\r\n  return {\r\n    locations: state.locationReducer\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function Favorites(props) {\r\n  const { dispatch, locations } = props\r\n  const history = useHistory()\r\n  const toast = useRef(null);\r\n\r\n  function toWeather(item) {\r\n    dispatch(viewfavorite(item))\r\n    return history.push('/getWeatherByLocation')\r\n  }\r\n\r\n  function remove(index) {\r\n    dispatch(deleteFavoriteLocation(index))\r\n    toast.current.show({ severity: 'info', summary: 'Info Message', detail: 'Location deleted', life: 3000 });\r\n  }\r\n\r\n  return (<>\r\n    <Container>\r\n      <Toast ref={toast} />\r\n      {locations.favoriteLocation.map((item, index) => {\r\n        return <div key={index} style={{ display: 'inline-block' }}>\r\n          <MyCard index={index} >\r\n            <h1>{item.LocalizedName}</h1>\r\n            <CurrentWeather locationKey={item.Key}></CurrentWeather>\r\n            <span>\r\n              <Button onClick={() => toWeather(item)}> <NavigationIcon sx={{ mr: 1 }} />To weather</Button>\r\n              <Button onClick={() => remove(index)}><ClearIcon sx={{ mr: 1 }} />Remove</Button>\r\n            </span>\r\n          </MyCard>\r\n        </div>\r\n      })}\r\n    </Container>\r\n  </>)\r\n})","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport { Container } from 'react-bootstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  withRouter\r\n\r\n} from 'react-router-dom'\r\nimport Favorites from './favorites';\r\nimport Weather from './weather';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 500,\r\n  },\r\n});\r\n\r\nexport default withRouter(function Navbar(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const history = props.history\r\n\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <br/>\r\n        <BottomNavigation\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          showLabels\r\n          className={classes.root}\r\n        >\r\n          <BottomNavigationAction onClick={() => { history.push(\"/\") }} label=\"Weather\" icon={<Brightness4Icon />} />\r\n          <BottomNavigationAction onClick={() => { history.push(\"/favorites\") }} label=\"Favorites\" icon={<FavoriteBorderIcon />} />\r\n        </BottomNavigation>\r\n      </Container>\r\n\r\n      <Switch>\r\n        <Route path=\"/favorites\">\r\n          <Favorites></Favorites>\r\n        </Route>\r\n\r\n        <Route path=\"/getWeatherByLocation\">\r\n          <Weather></Weather>\r\n        </Route>\r\n\r\n        <Route path=\"/\">\r\n          <Weather></Weather>\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n)\r\n\r\n","import './App.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/stor';\nimport Navbar from './components/navbar'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <Navbar></Navbar>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}